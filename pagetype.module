<?php

/**
 * @file
 * Pagetype module file, includes all the various parts that power the pagetype entity type.
 */

/**
 * Composer PSR-4 Autoloader.
 */
require_once 'vendor/autoload.php';

/**
 * Form structure and validation.
 */
require_once 'forms/forms.php';

/**
 * Permissions.
 */
require_once 'components/permissions.php';

/**
 * Entity Info.
 */
require_once 'components/entity.php';

/**
 * Theme definitions.
 */
require_once 'components/theme.php';

/**
 * Routes and menu items.
 */
require_once 'components/routes.php';

/**
 * Page type definitions.
 */
require_once 'components/types.php';

/**
 * Token definitions and info.
 */
require_once 'components/tokens.php';

/**
 * Path hooks and alteration callbacks.
 */
require_once 'components/path.php';

/**
 * Pathauto optional hook implementation.
 */
require_once 'components/pathauto.php';

/**
 * Hook_help()
 */
function pagetype_help(string $path, $arg) : string {
  if ($path !== 'admin/help#pagetype') {
    return '';
  }

  $filepath = drupal_get_path('module', 'pagetype') . '/README.md';
  $readme   = file_exists($filepath) ? file_get_contents($filepath) : NULL;

  if (module_exists('markdown')) {
    $filters = module_invoke('markdown', 'filter_info');
    $info    = $filters['filter_markdown'];

    if (function_exists($info['process callback'])) {
      $output = $info['process callback']($readme, NULL);
    }
    else {
      $output = '<pre>' . $readme . '</pre>';
    }
  }
  else {
    $output = '<pre>' . $readme . '</pre>';
  }

  return $output;
}
